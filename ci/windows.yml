build:windows:
  image: $CI_REGISTRY_IMAGE/build-environment/windows
  stage: build
  script:
    - git submodule update --init
    - x86_64-w64-mingw32.shared-cmake -S .
      -B "$BUILD_DIR"
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR"
      -DELPIDA_WEB_API_KEY="$ELPIDA_WEB_API_KEY"
      -DELPIDA_VERSION_MAJOR=$ELPIDA_VERSION_MAJOR
      -DELPIDA_VERSION_MINOR=$ELPIDA_VERSION_MINOR
      -DELPIDA_VERSION_REVISION=$ELPIDA_VERSION_REVISION
      -DELPIDA_VERSION_BUILD=$ELPIDA_VERSION_BUILD
    - make -C "$BUILD_DIR" -j$(nproc) install
  artifacts:
    expire_in: 2h30min
    paths:
      - $BUILD_DIR
      - $INSTALL_DIR

package:windows:
  image: $CI_REGISTRY_IMAGE/build-environment/windows
  stage: package
#  only:
#    - master
#    - develop
  dependencies:
    - build:windows
  script:
    - currentDir=$(pwd)
    - stagingDir=$(mktemp -d -t ci-XXXXXXXXXX)
    - /mxe/tools/copydlldeps.sh -c
      -f "$INSTALL_DIR/bin/elpida-qt.exe"
      -S "/mxe/usr/x86_64-w64-mingw32.shared/bin/ /mxe/usr/x86_64-w64-mingw32.shared/qt5/bin/"
      -R "$INSTALL_DIR  $BUILD_DIR"
      -d "$stagingDir"
    - cp -r /mxe/usr/x86_64-w64-mingw32.shared/qt5/plugins/iconengines "$stagingDir"
    - cp -r /mxe/usr/x86_64-w64-mingw32.shared/qt5/plugins/imageformats "$stagingDir"
    - cp -r /mxe/usr/x86_64-w64-mingw32.shared/qt5/plugins/platforms "$stagingDir"
    - cp -r /mxe/usr/x86_64-w64-mingw32.shared/qt5/plugins/platformthemes "$stagingDir"
    - cp -r /mxe/usr/x86_64-w64-mingw32.shared/qt5/plugins/styles "$stagingDir"
    - cp /mxe/usr/x86_64-w64-mingw32.shared/qt5/bin/Qt5Svg.dll "$stagingDir"
    - mkdir "$stagingDir/Benchmarks"
    - find "$BUILD_DIR/src/Benchmarks" -type f -name '*.dll' -exec cp "{}" "$stagingDir/Benchmarks" \;
    - cp "$INSTALL_DIR/bin/elpida-qt.exe" "$stagingDir"
    - cd "$stagingDir"
    - zip z -r .
    - cp ./z.zip "$currentDir/$PACKAGE_FILENAME.zip"
    - cd "$currentDir"
    - sha256sum "$PACKAGE_FILENAME.zip" > SHA256SUMS
    - rm -rf "$stagingDir"
  artifacts:
    paths:
      - $PACKAGE_FILENAME.zip
      - SHA256SUMS


deploy:master:windows:
  stage: deploy
#  only:
#    - master
  dependencies:
    - package:windows
  script:
    - cp "$PACKAGE_FILENAME.zip" "$PACKAGE_FILENAME_DEPLOY.zip"
    - sha256sum "$PACKAGE_FILENAME.zip" > $PACKAGE_FILENAME.zip.SHA256SUMS
    - sha256sum "$PACKAGE_FILENAME_DEPLOY.zip" > $PACKAGE_FILENAME_DEPLOY.zip.SHA256SUMS
  artifacts:
    paths:
      - $PACKAGE_FILENAME_DEPLOY.zip
      - $PACKAGE_FILENAME.zip
      - $PACKAGE_FILENAME_DEPLOY.zip.SHA256SUMS
      - $PACKAGE_FILENAME.zip.SHA256SUMS

deploy:beta:windows:
  stage: deploy
#  only:
#    - develop
  dependencies:
    - package:windows
  script:
    - cp "$PACKAGE_FILENAME.zip" "$PACKAGE_FILENAME_DEPLOY_BETA.zip"
    - sha256sum "$PACKAGE_FILENAME.zip" > $PACKAGE_FILENAME.zip.SHA256SUMS
    - sha256sum "$PACKAGE_FILENAME_DEPLOY_BETA.zip" > $PACKAGE_FILENAME_DEPLOY_BETA.zip.SHA256SUMS
  artifacts:
    paths:
      - $PACKAGE_FILENAME_DEPLOY_BETA.zip
      - $PACKAGE_FILENAME.zip
      - $PACKAGE_FILENAME_DEPLOY_BETA.zip.SHA256SUMS
      - $PACKAGE_FILENAME.zip.SHA256SUMS